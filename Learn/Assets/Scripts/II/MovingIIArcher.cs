using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Events;

public class MovingIIArcher : MonoBehaviour
{
    //Публичные поля
    public float Speed; // Скорость лучника
    public Transform Target; //Цель лучника
    public GameObject Arrow; // Префаб стрелы
    public Transform TransformArrow; // Место создания стрелы у лучника
    public string EnemyTag; //Тег врагов
    public float SecondCadr;
    public float SecondShoot;

    //Приватные поля
    private Turn turn; //Ссылка на компонент поворота
    private Animator _animator;
    private void Start()
    {
        turn = GetComponent<Turn>();
        _animator = GetComponent<Animator>();
    }
    private void Update()
    {
        SecondCadr += Time.deltaTime;
        /*if (Input.GetButtonDown("Fire1"))
        {
            ChecShoot();
        }*/
    }
    private void OnTriggerStay2D(Collider2D collision)
    {
        if (collision.CompareTag(EnemyTag))
        {
            Transform transformEnemy = collision.transform;
            Target = transformEnemy;
            turn.TargetEnemy(Target);
            turn.TurnAround();
            Debug.Log(gameObject + "Враг в тригере");
            if (SecondCadr > SecondShoot)
            {
                ChecShoot();
                _animator.SetBool("isEnemy", true);
                SecondCadr = 0;
            }
        }
    }
    private void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.CompareTag(EnemyTag))
        {
            Target = null;
            _animator.SetBool("isEnemy", false);
            Debug.Log(gameObject + "Враг вышел из зоны действий");
        }
    }
    private void MoveTransform(Transform target) //Передвижение персонажа
    {
        transform.position = Vector3.MoveTowards(transform.position, target.position, Speed * Time.deltaTime);
    }

    public void ChecShoot() //Метод создания стрелы
    {
        GameObject arrow = Instantiate(Arrow, TransformArrow);
        Arrow Ar = arrow.GetComponent<Arrow>();
        Ar.AddTarget(Target);
    }
}
